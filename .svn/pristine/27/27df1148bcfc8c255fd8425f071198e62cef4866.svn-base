//
//  IYCGetQqAppIDSrv.m
//  IYangCongReader
//
//  Created by MaTeng on 14-10-11.
//  Copyright (c) 2014å¹´ IYangCong. All rights reserved.
//

#import "IYCGetQqAppIDSrv.h"
#import "IYCURLUtil.h"
#import "IYCGetAppIDResp.h"

@implementation IYCGetQqAppIDSrv
- (void)GetQqappID:(IYCGetAppIDReq *)request
{
    NSURL *url = [NSURL URLWithString:[IYCURLUtil getQqAppID]];
    request.deviceType = [self getDeviceType:[self getPhoneModel]];
    request.deviceToken = [self getDeviceToken];
    DebugLog(@"request json: %@",[request getJSONString]);
    [self initRequest:url withBody:[request getJSONString]];
    
    //ADD SESSION
    NSUserDefaults *userdefaults = [NSUserDefaults standardUserDefaults];
    NSString *sessionID = [NSString stringWithFormat:@"JSESSIONID=%@",[userdefaults objectForKey:KEY_SessionID]];
//    [self.request addRequestHeader:@"Cookie" value:sessionID];
    
    [self startAsynRequest];

}

//#pragma mark -
//#pragma mark ASIHTTPRequestDelegate method
//- (void)requestFinished:(ASIHTTPRequest *)requestParam {
//    NSString *jsonString = [requestParam responseString];
//    
//    DebugLog(@"response json:%@",jsonString);
//    
//    IYCGetAppIDReq *resp = [[[IYCGetAppIDReq alloc] init] initWithJSONDictionary:[jsonString objectFromJSONString]];
//    
//    if (resp.errorCode == ResponseErrorCode_Success)
//    {
//        if (self.delegate && [self.delegate respondsToSelector:@selector(requestDidSuccess:)]) {
//            [self.delegate requestDidSuccess:resp];
//        }
//        else
//        {
//            if (self.delegate && [self.delegate respondsToSelector:@selector(requestDidFailed:)]) {
//                [self.delegate requestDidFailed:resp];
//            }
//        }
//    }
//    
//    
//}
//
//- (void)requestFailed:(ASIHTTPRequest *)requestParam {
//    IYCGetAppIDResp *resp = [[IYCGetAppIDResp alloc] init];
//    resp.errorCode = ResponseErrorCode_RequestAccessFailed;
//    
//    DebugLog(@"error Message: %@", resp.errorMessage);
//    if (self.delegate && [self.delegate respondsToSelector:@selector(requestDidFailed:)]) {
//        [self.delegate requestDidFailed:resp];
//    }
//}

@end
