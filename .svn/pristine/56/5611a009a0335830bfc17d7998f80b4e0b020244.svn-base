//
//  IYCService.m
//  Reader
//
//  Created by Ian on 13-3-8.
//  Copyright (c) 2013年 IYangCong. All rights reserved.
//  说明：请求服务器基类

#import "IYCService.h"
#import "IYCFileManager.h"
#import "UIDevice+IdentifierAddition.h"
#import "IYCConfig.h"

#include <sys/types.h>
#include <sys/sysctl.h>

@interface IYCService ()


@end

@implementation IYCService
@synthesize request = _request;
@synthesize delegate = _delegate;



- (NSString *)getPhoneModel
{
//    size_t size;
//    
//    // get the length of machine name
//    sysctlbyname("hw.machine", NULL, &size, NULL, 0);
//    
//    // get machine name
//    char *machine = (char*)malloc(size);
//    sysctlbyname("hw.machine", machine, &size, NULL, 0);
//    NSString *platform = [NSString stringWithCString:machine encoding:NSUTF8StringEncoding];
//    free(machine);
    int mib[2];
    size_t len;
    char *machine;
    
    mib[0] = CTL_HW;
    mib[1] = HW_MACHINE;
    sysctl(mib, 2, NULL, &len, NULL, 0);
    machine = malloc(len);
    sysctl(mib, 2, machine, &len, NULL, 0);
    
    NSString *platform = [NSString stringWithCString:machine encoding:NSASCIIStringEncoding];
    free(machine);
    
    return platform;
    
}

- (NSNumber *)getDeviceType:(NSString *)platform
{//类型3为Android，ios类型分配为0-99（3除外）
//    if ([platform isEqualToString:@"iPhone3,1"])
//    {
//        //@"iPHone4"
//        return [NSNumber numberWithInt:0];
//    }
//    else if ([platform hasPrefix:@"iPhone4"])
//    {
//        //@"iPHone4S"
//        return [NSNumber numberWithInt:1];
//    }
//    else if([platform hasPrefix:@"iPhone5"])
//    {
//        //@"iPHone5"
//        return [NSNumber numberWithInt:2];
//    }
//    else if ([platform hasPrefix:@"iPad"])
//    {
//        //@"pad"
//        return [NSNumber numberWithInt:97];
//    }
//    else if ([platform hasPrefix:@"x86"])
//    {
//        //@"x86_64虚拟机"
//        return [NSNumber numberWithInt:99];
//    }
//    else
//        return [NSNumber numberWithInt:98];
    
//    if ([platform isEqualToString:@"iPhone2,1"]) return [NSNumber numberWithInt:4];
//    if ([platform isEqualToString:@"iPhone3,1"]) return [NSNumber numberWithInt:5];
//    if ([platform isEqualToString:@"iPhone3,2"]) return [NSNumber numberWithInt:6];
//    if ([platform isEqualToString:@"iPhone3,3"]) return [NSNumber numberWithInt:7];
//    if ([platform isEqualToString:@"iPhone4,1"]) return [NSNumber numberWithInt:8];
//    if ([platform isEqualToString:@"iPhone5,1"]) return [NSNumber numberWithInt:9];
//    if ([platform isEqualToString:@"iPhone5,2"]) return [NSNumber numberWithInt:10];
//    if ([platform isEqualToString:@"iPhone5,3"]) return [NSNumber numberWithInt:11];
//    if ([platform isEqualToString:@"iPhone5,4"]) return [NSNumber numberWithInt:12];
//    if ([platform isEqualToString:@"iPhone6,1"]) return [NSNumber numberWithInt:13];
//    if ([platform isEqualToString:@"iPhone6,2"]) return [NSNumber numberWithInt:14];
//    if ([platform isEqualToString:@"iPhone7,1"]) return [NSNumber numberWithInt:15];
//    if ([platform isEqualToString:@"iPhone7,2"]) return [NSNumber numberWithInt:16];
//    if ([platform isEqualToString:@"x86"])       return [NSNumber numberWithInt:99];
//    else
        return [NSNumber numberWithInt:98];
;
}


- (NSString *)getDeviceToken
{
    return @"d66529248df976eb3f5365357166e567";
//    return [[UIDevice  currentDevice] uniqueDeviceIdentifier];
}

#pragma mark -
#pragma public methods
- (void)startAsynchronousRequest: (NSURL *)url postData:(NSString *)data {
	
	[self initRequest:url withBody:data];
    [self.request setTimeOutSeconds:TIMEOUTSECOND];
	[self.request startAsynchronous];
	
}

- (void)startAsynRequest
{
    [self.request setTimeOutSeconds:TIMEOUTSECOND];
	[self.request startAsynchronous];    
}

- (void)startDownloadRequest:(NSURL *)url postData:(NSString *)data bookid:(long)bookID progress:(id)progress {
	
	DebugLog(@"%@",data);
	
	[self initRequest:url withBody:data];
    //ADD SESSION
    NSUserDefaults *userdefaults = [NSUserDefaults standardUserDefaults];
    if (![userdefaults objectForKey:KEY_SessionID]) {
        self.request.useSessionPersistence = NO;
    }
    NSString *sessionID = [NSString stringWithFormat:@"JSESSIONID=%@",[userdefaults objectForKey:KEY_SessionID]];
    NSLog(@"sessionId = %@",sessionID);
    [self.request addRequestHeader:@"Cookie" value:sessionID];
    
    [self.request setValidatesSecureCertificate:NO];
	[self.request setTimeOutSeconds:TIMEOUTSECOND_MULTIMEDIA];
	[self.request setShouldContinueWhenAppEntersBackground:YES];
	
	NSString *savePath = [[IYCFileManager getBookSavePath:bookID] stringByAppendingPathComponent:[NSString stringWithFormat:@"%ld.zip",bookID]];
	NSString *tempPath = [[IYCFileManager getBookTempSavePath] stringByAppendingPathComponent:[NSString stringWithFormat:@"%ld.zip.temp",bookID]];
	[self.request setDownloadDestinationPath:savePath];
	[self.request setTemporaryFileDownloadPath:tempPath];
	[self.request setDownloadProgressDelegate:progress];
	[self.request setAllowResumeForFileDownloads:YES];
	[self.request setUserInfo:[NSDictionary dictionaryWithObjectsAndKeys:[NSNumber numberWithInt:bookID],@"bookID",nil]];
}	


#pragma mark -
#pragma pravite methods
- (void)initRequest:(NSURL *)url withBody:(NSString *)data {

    self.request = [ASIHTTPRequest requestWithURL:url];
    
//    NSDictionary *json = [NSJSONSerialization JSONObjectWithData:[data dataUsingEncoding:NSUTF8StringEncoding] options:NSJSONReadingMutableLeaves error:nil];

	
//	Request_Header_Platform;
	[ASIHTTPRequest setShouldUpdateNetworkActivityIndicator:NO];
	[self.request setDefaultResponseEncoding:NSUTF8StringEncoding];
    [self.request setUseSessionPersistence:YES];
	//[self.request setValidatesSecureCertificate:NO];
    [self.request addRequestHeader:@"Content-Type" value:@"application/json; charset=utf-8"];
    [self.request setRequestMethod:@"POST"];
    self.request.delegate = self;
	
    [self.request appendPostData:[data dataUsingEncoding:NSUTF8StringEncoding]];
    
  
}


#pragma mark -
#pragma mark ASIHTTPRequestDelegate method
- (void)requestFinished:(ASIHTTPRequest *)requestParam {
    DebugLog(@"haleyhererer");

}

- (void)requestFailed:(ASIHTTPRequest *)requestParam {
   
	
}


@end
