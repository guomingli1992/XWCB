//
//  IYCContentViewController.m
//

//

#import "IYCContentViewController.h"
#import "MBProgressHUD.h"
#import "IYCParagraph.h"
#import "IYCCommon.h"
#import "IYCSecurityManager.h"

@interface IYCContentViewController ()
{
    IYCChapter    *chapter2; //the chapter corresponding
    NSString         *refreshUrl;
}
@end

@implementation IYCContentViewController
@synthesize theWebView = _theWebView;
@synthesize readingBook = _readingBook;
@synthesize pagelabel = _pagelabel;
@synthesize titlelabel = _titlelabel;
@synthesize line = _line;
- (id)init {
    
    self = [super initWithNibName:nil bundle:nil];
    
    _theWebView = [[IYCWebView alloc] init];
    _theWebView.dataDetectorTypes = UIDataDetectorTypeNone;
    self.allParsed = NO;
    
    return self;
    
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
}

#pragma mark - View lifecycle

- (void)viewDidLoad
{
    [super viewDidLoad];
    
    DebugLog(@"pageUrl===%@",self.page.pageUrl);
    NSString *nightModeStr=[[NSUserDefaults standardUserDefaults] objectForKey:@"nightMode"];
    if ([nightModeStr isEqualToString:@"6"]) {
        self.view.backgroundColor = NIGHT_COLOR_BACK;
    }
    else if ([nightModeStr isEqualToString:@"1"]){
        self.view.backgroundColor = DAY_COLOR_BACK1;
    }
    else if ([nightModeStr isEqualToString:@"2"]){
        self.view.backgroundColor = DAY_COLOR_BACK2;
    }
    else if ([nightModeStr isEqualToString:@"3"]){
        self.view.backgroundColor = DAY_COLOR_BACK3;
    }
    else if ([nightModeStr isEqualToString:@"4"]){
        self.view.backgroundColor = DAY_COLOR_BACK4;
    }
    else if ([nightModeStr isEqualToString:@"5"]){
        self.view.backgroundColor = DAY_COLOR_BACK5;
    }
    [self topBookTitleAndPageNumber];
    
    self.theWebView.frame = CGRectMake(0, 50, WIDTH1, [UIScreen mainScreen].bounds.size.height - 100);
    NSString * htmlStr = nil;
    if (self.readingBook.bookId == 0)
    {
        htmlStr = [[IYCCommon decodeBase64forFile:self.page.pageUrl] retain];
    }
    else
    {
        IYCSecurityManager *manager = [[IYCSecurityManager alloc] init];
        htmlStr = [[manager decryptWithFilePath:self.page.pageUrl] retain];
        [manager release];
    }
    self.theWebView.dataDetectorTypes = UIDataDetectorTypeNone;
    [self.theWebView loadHTMLString:htmlStr baseURL:[NSURL fileURLWithPath:self.page.baseURL isDirectory:YES]];
    
    [htmlStr release];
    [self.view addSubview:self.theWebView];
    
    UIScrollView *scrollView = [self.theWebView.subviews objectAtIndex:0]; // it is "UIScroller" on iphone(v3.1.3-)
    if (scrollView && [scrollView isKindOfClass:[UIScrollView class]]) {
        scrollView.scrollEnabled = NO;
    }
    
    UISwipeGestureRecognizer *downSwipeGesture = [[UISwipeGestureRecognizer alloc] initWithTarget:self action:@selector(changeLanguage)];
    downSwipeGesture.direction = UISwipeGestureRecognizerDirectionDown;
    [self.view addGestureRecognizer:downSwipeGesture];
    [downSwipeGesture release];
    
    
}

- (void)topBookTitleAndPageNumber {
    UIColor *color = nil;
    UIImage *image = nil;
    if ([[[NSUserDefaults standardUserDefaults] objectForKey:@"nightMode"] isEqualToString:@"6"]) {
        image = [UIImage imageNamed:@"reading-steped.png"];
        color = NIGHT_COLOR_TEXT;
    }else{
        image = [UIImage imageNamed:@"reading-step.png"];
        color = DAY_COLOR_TEXT;
    }
    
    bookMarkView = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"marked.png"]];
    bookMarkView.frame = CGRectMake(295, 0, 11, 13);
    [self.view addSubview:bookMarkView];
    bookMarkView.hidden = YES;
    
    UIFont *font = [UIFont systemFontOfSize:15];
    _titlelabel = [[UILabel alloc] initWithFrame:CGRectMake(15, 10, WIDTH-30, 30)];
    _titlelabel.backgroundColor = [UIColor clearColor];
    _titlelabel.textColor = color;
    _titlelabel.font = font;
    [self.view addSubview:_titlelabel];
    
    if (self.langType == IYCLanguageChinese) {
        self.titlelabel.text = self.readingBook.bookChineseTitle;
    } else {
        self.titlelabel.text = self.readingBook.bookEnglishTitle;
    }
    
    _line = [[UIImageView alloc] initWithImage:image];
    _line.frame = CGRectMake(15, 40, WIDTH-30, 2);
    [self.view addSubview:_line];
    
    
    _pagelabel = [[UILabel alloc] initWithFrame:CGRectMake(0, [UIScreen mainScreen].bounds.size.height - 35, WIDTH1, 30)];
    _pagelabel.text = [NSString stringWithFormat:@"%d",self.pageNum + 1];
    _pagelabel.backgroundColor = [UIColor clearColor];
    _pagelabel.textColor = color;
    _pagelabel.font = font;
    _pagelabel.textAlignment = NSTextAlignmentCenter;
    [self.view addSubview:_pagelabel];
    
}

- (void)changeLanguage {
    
    DebugLog(@"swipe to change Language");
    
    if (self.canChange == YES) {
        
        [UIView beginAnimations:nil context:nil];
        [UIView setAnimationDuration:0.5];
        [UIView setAnimationDelegate:self];
        [UIView setAnimationDidStopSelector:@selector(bounceBack)];
        self.view.frame = CGRectOffset(self.view.frame, 0, 10);
        [UIView commitAnimations];
        
        
        if (self.langType == IYCLanguageChinese) {
            self.langType = IYCLanguageEnglish;
        } else {
            self.langType = IYCLanguageChinese;
        }
        
        [[NSNotificationCenter defaultCenter] postNotificationName:@"changeLanguage" object:[NSNumber numberWithInt:self.langType]];
        
    } else {
        
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"" message:@"抱歉,本书没有对应译文版本" delegate:nil cancelButtonTitle:nil otherButtonTitles:nil, nil];
        [alert show];
        [self performSelector:@selector(dimissAlert:)withObject:alert afterDelay:1.5];
    }
}
- (void) dimissAlert:(UIAlertView *)alert {
    if(alert){
        [alert dismissWithClickedButtonIndex:[alert cancelButtonIndex] animated:YES];
    }
}
- (void)webViewRefresh:(IYCPage *)newPage {
    
    refreshUrl = [newPage.pageUrl retain];
    DebugLog(@"New pageUrl===%@",refreshUrl);
    
    IYCChapter *tchapter = nil;
    chapter2 = nil;
    if (self.langType == IYCLanguageChinese)
    {
        self.titlelabel.text = self.readingBook.bookChineseTitle;
        tchapter = [self.readingBook.chineseBookEdition.chapters objectAtIndex:newPage.chapterId];
        if (self.canChange && self.allParsed) {
            chapter2 = [self.readingBook.englishBookEdition.chapters objectAtIndex:newPage.chapterId];
        }
    }
    else
    {
        self.titlelabel.text = self.readingBook.bookEnglishTitle;
        tchapter = [self.readingBook.englishBookEdition.chapters objectAtIndex:newPage.chapterId];
        if (self.canChange && self.allParsed) {
            chapter2 = [self.readingBook.chineseBookEdition.chapters objectAtIndex:newPage.chapterId];
        }
    }
    
    self.theWebView.nChapter = tchapter;
    
    if (chapter2 && chapter2.paragraphArray && chapter2.paragraphArray.count == 0 ) {
        UIWebView *webview = [[UIWebView alloc] initWithFrame:self.theWebView.frame];
        webview.delegate = self;
        
        NSString * htmlStr = nil;
        if (self.readingBook.bookId == 0)
        {
            htmlStr = [[IYCCommon decodeBase64forFile:chapter2.spinePath] retain];
        }
        else
        {
            IYCSecurityManager *manager = [[IYCSecurityManager alloc] init];
            htmlStr = [[manager decryptWithFilePath:chapter2.spinePath] retain];
            [manager release];
        }
        
        [webview loadHTMLString:htmlStr baseURL:[NSURL fileURLWithPath:chapter2.basePath isDirectory:YES]];
        
        [htmlStr release];
    }
    else
    {
        NSString * htmlStr = nil;
        if (self.readingBook.bookId == 0)
        {
            htmlStr = [[IYCCommon decodeBase64forFile:refreshUrl] retain];
        }
        else
        {
            IYCSecurityManager *manager = [[IYCSecurityManager alloc] init];
            htmlStr = [[manager decryptWithFilePath:refreshUrl] retain];
            [manager release];
        }
        
        [self.theWebView loadHTMLString:htmlStr baseURL:[NSURL fileURLWithPath:newPage.baseURL isDirectory:YES]];
        
        [htmlStr release];
        
        [refreshUrl release];
    }
    
}

- (void)jumpToPageInChapter {
    float pageOffset = self.page.pageOffset;
    DebugLog(@"pageOffset==%f",pageOffset);
    if(!self.theWebView.isLoading)
    {
        NSString* goToOffsetFunc = [NSString stringWithFormat:@" function pageScroll(xOffset){window.scroll(xOffset,0); } "];
        NSString* goTo =[NSString stringWithFormat:@"pageScroll(%f)", pageOffset];
        [self.theWebView stringByEvaluatingJavaScriptFromString:goToOffsetFunc];
        [self.theWebView stringByEvaluatingJavaScriptFromString:goTo];
    }
}

- (void)bounceBack {
    [UIView beginAnimations:nil context:nil];
    [UIView setAnimationDuration:0.5];
    self.view.frame = CGRectOffset(self.view.frame, 0, -10);
    [UIView commitAnimations];
}

- (void)setBookMarkState:(BOOL)hasBookMark
{
    bookMarkView.hidden = !hasBookMark;
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    return YES;
}

- (void)setLangType:(IYCLanguageType)lang {
    _langType = lang;
    self.theWebView.langType = lang;
}

- (void)setChangeChapterIndex:(int)changeIndex {
    _changeChapterIndex = changeIndex;
    self.theWebView.changeChapterIndex = changeIndex;
}

- (void)setChangeChapterOffset:(float)changeOffset {
    _changeChapterOffset = changeOffset;
    self.theWebView.changeChapterOffset = changeOffset;
}

- (void)setPage:(IYCPage *)page {
    if (_page != page) {
        [_page release];
        _page = [page retain];
    }
    
    self.theWebView.page = page;
}

- (void)setPageNum:(int)pageNumber {
    _pageNum = pageNumber;
    self.theWebView.pageNum = pageNumber;
}
- (void)setReadingBook:(IYCBook *)readingBook
{
    [_readingBook release];
    _readingBook = [readingBook retain];
    self.theWebView.readingBook = readingBook;
}

#pragma mark -
#pragma UIWebViewDelegate Methods
- (BOOL)webView:(UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType {
    NSString *nightModelStr=[[NSUserDefaults standardUserDefaults]objectForKey:@"nightMode"];
    if ([nightModelStr isEqualToString:@"6"]) {
        [self.theWebView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.backgroundColor='#262626'"];
        [self.theWebView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.color='#8d8d8d'"];
    }
    else if ([nightModelStr isEqualToString:@"1"]){
        [self.theWebView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.backgroundColor='#FAECD1'"];
        [self.theWebView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.color='#000000'"];
    }
    else if ([nightModelStr isEqualToString:@"2"]){
        [self.theWebView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.backgroundColor='#F9E2DC'"];
        [self.theWebView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.color='#000000'"];
    }
    else if ([nightModelStr isEqualToString:@"3"]){
        [self.theWebView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.backgroundColor='#E3F4F0'"];
        [self.theWebView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.color='#000000'"];
    }
    else if ([nightModelStr isEqualToString:@"4"]){
        [self.theWebView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.backgroundColor='#E3EEF5'"];
        [self.theWebView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.color='#000000'"];
    }
    else if ([nightModelStr isEqualToString:@"5"]){
        [self.theWebView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.backgroundColor='#DCDADB'"];
        [self.theWebView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.color='#000000'"];
    }
    
    return YES;
}

- (void)webViewDidFinishLoad:(UIWebView *)webView {
    NSString *nightModelStr=[[NSUserDefaults standardUserDefaults]objectForKey:@"nightMode"];
    if ([nightModelStr isEqualToString:@"6"]) {
        [self.theWebView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.backgroundColor='#262626'"];
        [self.theWebView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.color='#8d8d8d'"];
    }
    else if ([nightModelStr isEqualToString:@"1"]){
        [self.theWebView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.backgroundColor='#FAECD1'"];
        [self.theWebView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.color='#000000'"];
    }
    else if ([nightModelStr isEqualToString:@"2"]){
        [self.theWebView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.backgroundColor='#F9E2DC'"];
        [self.theWebView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.color='#000000'"];
    }
    else if ([nightModelStr isEqualToString:@"3"]){
        [self.theWebView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.backgroundColor='#E3F4F0'"];
        [self.theWebView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.color='#000000'"];
    }
    else if ([nightModelStr isEqualToString:@"4"]){
        [self.theWebView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.backgroundColor='#E3EEF5'"];
        [self.theWebView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.color='#000000'"];
    }
    else if ([nightModelStr isEqualToString:@"5"]){
        [self.theWebView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.backgroundColor='#DCDADB'"];
        [self.theWebView stringByEvaluatingJavaScriptFromString:@"document.getElementsByTagName('body')[0].style.color='#000000'"];
    }
    
    if (chapter2 && [chapter2.paragraphArray count] == 0) {
        int pCount = [[webView stringByEvaluatingJavaScriptFromString:@"document.body.children.length"] intValue];
        
        for (int i = 0; i<pCount; i++) {
            IYCParagraph *paragraph = [[IYCParagraph alloc] init];
            NSString *string1 = [NSString stringWithFormat:@"document.body.children[%d].id",i];
            paragraph.paragraphId = [[webView stringByEvaluatingJavaScriptFromString:string1] intValue];
            
            NSString *string = [NSString stringWithFormat:@"document.body.children[%d].offsetTop",i];
            paragraph.paragraphStartOffset = [[webView stringByEvaluatingJavaScriptFromString:string] floatValue] ;
            
            NSString *stringH = [NSString stringWithFormat:@"document.body.children[%d].offsetHeight",i];
            paragraph.paragraphEndOffset = paragraph.paragraphStartOffset + [[webView stringByEvaluatingJavaScriptFromString:stringH] floatValue];
            
            NSString *stringPa = [NSString stringWithFormat:@"document.body.children[%d].innerText",i];
            paragraph.paragString = [webView stringByEvaluatingJavaScriptFromString:stringPa];
            
            paragraph.stringCount = paragraph.paragString.length;
            
            paragraph.paragraphURL = chapter2.spinePath;
            paragraph.langType = chapter2.lType;
            
            [chapter2.paragraphArray addObject:paragraph];
            
            [paragraph release];
        }
        
        float pageHeight = webView.frame.size.height;
        
        IYCParagraph *paragraphOlder1 = nil;
        for (int i = 0; i < chapter2.pageCount; i++) {
            
            NSMutableArray *array2 = [NSMutableArray array];
            
            IYCPage *page = [chapter2.pageArray objectAtIndex:i];
            for (int j = 0; j < pCount; j++) {
                IYCParagraph *paragraph = [chapter2.paragraphArray objectAtIndex:j];
                
                if ((paragraph.paragraphStartOffset > page.pageOffsetH - 1) && (paragraph.paragraphStartOffset < page.pageOffsetH + pageHeight) ) {
                    paragraphOlder1 = paragraph;
                    paragraph.paragraphStartPage = i;
                }
                
                if ((paragraph.paragraphEndOffset > page.pageOffsetH) && (paragraph.paragraphEndOffset < page.pageOffsetH + pageHeight + 1)) {
                    paragraph.paragraphEndPage = i;
                    [array2 addObject:[NSNumber numberWithInt:paragraph.paragraphId]];
                }
            }
            
            if (array2.count == 0) {
                [array2 addObject:[NSNumber numberWithInt:paragraphOlder1.paragraphId]];
            }
            
            [chapter2.paragraphEndDict setObject:array2 forKey:[NSString stringWithFormat:@"%d",page.pageId]];
            
        }
    }
    
    [webView release];
    NSString * htmlStr = nil;
    if (self.readingBook.bookId == 0)
    {
        htmlStr = [[IYCCommon decodeBase64forFile:refreshUrl] retain];
    }
    else
    {
        IYCSecurityManager *manager = [[IYCSecurityManager alloc] init];
        htmlStr = [[manager decryptWithFilePath:refreshUrl] retain];
        [manager release];
    }
    
    [self.theWebView loadHTMLString:htmlStr baseURL:[NSURL fileURLWithPath:self.theWebView.nChapter.basePath isDirectory:YES]];
    
    [htmlStr release];
    [refreshUrl release];
}


- (void)dealloc {
    
    [_theWebView release];
    [_page release];
    [_pagelabel release];
    [_titlelabel release];
    [bookMarkView release];
    [_line release];
    [super dealloc];
    
}

@end
